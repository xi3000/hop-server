--// CONFIG
local WEBHOOK_URL = "https://discord.com/api/webhooks/1401785416104939720/6LU4HbxLm8mwoS8iZ0LrbwBmZ1Wp6clskoXsEGtnymrKNLVDTeVPZbpeBKKom9wrWG6Z" -- thay b·∫±ng webhook c·ªßa b·∫°n
local HOP_DELAY = 20 -- delay hop server (gi√¢y)

--// SERVICES
local HttpService = game:GetService("HttpService")
local TeleportService = game:GetService("TeleportService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

--// ƒê·ªåC TR·∫†NG TH√ÅI T·ª™ TELEPORTDATA
local teleportData = TeleportService:GetLocalPlayerTeleportData()
local autoHop = teleportData and teleportData.autoHop or false
local hopCount = teleportData and teleportData.hopCount or 0

--// H√ÄM G·ª¨I WEBHOOK
local function sendWebhook(success, jobId)
    hopCount += 1

    local data = {
        ["username"] = "AutoHop Logger",
        ["embeds"] = {{
            ["title"] = "üåç AutoHop Log",
            ["color"] = success and 0x00ff00 or 0xff0000,
            ["fields"] = {
                {["name"] = "üë§ Username", ["value"] = LocalPlayer.Name, ["inline"] = true},
                {["name"] = "‚úÖ Hop", ["value"] = success and "true" or "false", ["inline"] = true},
                {["name"] = "üÜî JobId", ["value"] = jobId or "nil", ["inline"] = false},
                {["name"] = "üîÅ Hop Count", ["value"] = tostring(hopCount), ["inline"] = true},
            },
            ["footer"] = {["text"] = "AutoHop Script Logger"}
        }}
    }

    local jsonData = HttpService:JSONEncode(data)

    pcall(function()
        if http_request then
            http_request({
                Url = WEBHOOK_URL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = jsonData
            })
        elseif syn and syn.request then
            syn.request({
                Url = WEBHOOK_URL,
                Method = "POST",
                Headers = {["Content-Type"] = "application/json"},
                Body = jsonData
            })
        end
    end)
end

--// AUTO HOP FUNCTION
local function autoHopServer()
    while autoHop do
        task.wait(HOP_DELAY)

        local success, errorMsg = pcall(function()
            local servers = HttpService:JSONDecode(
                game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Desc&limit=100")
            )

            for _, server in ipairs(servers.data) do
                if server.id ~= game.JobId and server.playing < server.maxPlayers then
                    sendWebhook(true, server.id)
                    TeleportService:TeleportToPlaceInstance(
                        game.PlaceId,
                        server.id,
                        LocalPlayer,
                        { autoHop = autoHop, hopCount = hopCount } -- üîë g·ª≠i d·ªØ li·ªáu sang server m·ªõi
                    )
                    return
                end
            end
        end)

        if not success then
            warn("‚ùå L·ªói hop server: " .. tostring(errorMsg))
            sendWebhook(false, nil)
        end
    end
end

--// GUI
local ScreenGui = Instance.new("ScreenGui", game.CoreGui)
local ToggleButton = Instance.new("TextButton", ScreenGui)
ToggleButton.Size = UDim2.new(0, 150, 0, 50)
ToggleButton.Position = UDim2.new(0.5, -75, 0.1, 0)
ToggleButton.Text = autoHop and "üü¢ AutoHop: ON" or "üî¥ AutoHop: OFF"
ToggleButton.BackgroundColor3 = autoHop and Color3.fromRGB(0, 200, 0) or Color3.fromRGB(200, 0, 0)
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.SourceSansBold
ToggleButton.TextSize = 20
ToggleButton.BorderSizePixel = 0
ToggleButton.Active = true
ToggleButton.Draggable = true

ToggleButton.MouseButton1Click:Connect(function()
    autoHop = not autoHop
    if autoHop then
        ToggleButton.Text = "üü¢ AutoHop: ON"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 0)
        task.spawn(autoHopServer)
    else
        ToggleButton.Text = "üî¥ AutoHop: OFF"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(200, 0, 0)
    end
end)

-- N·∫øu ƒëang b·∫≠t s·∫µn (do teleport sang server m·ªõi) th√¨ ch·∫°y loop
if autoHop then
    task.spawn(autoHopServer)
end
